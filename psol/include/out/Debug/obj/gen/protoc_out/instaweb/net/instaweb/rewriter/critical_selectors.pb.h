// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/rewriter/critical_selectors.proto

#ifndef PROTOBUF_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto__INCLUDED
#define PROTOBUF_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();

class CriticalSelectorSet;

// ===================================================================

class CriticalSelectorSet : public ::google::protobuf::MessageLite {
 public:
  CriticalSelectorSet();
  virtual ~CriticalSelectorSet();
  
  CriticalSelectorSet(const CriticalSelectorSet& from);
  
  inline CriticalSelectorSet& operator=(const CriticalSelectorSet& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const CriticalSelectorSet& default_instance();
  
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CriticalSelectorSet* internal_default_instance() {
    return default_instance_;
  }
  #endif
  
  void Swap(CriticalSelectorSet* other);
  
  // implements Message ----------------------------------------------
  
  CriticalSelectorSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CriticalSelectorSet& from);
  void MergeFrom(const CriticalSelectorSet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string critical_selectors = 1;
  inline int critical_selectors_size() const;
  inline void clear_critical_selectors();
  static const int kCriticalSelectorsFieldNumber = 1;
  inline const ::std::string& critical_selectors(int index) const;
  inline ::std::string* mutable_critical_selectors(int index);
  inline void set_critical_selectors(int index, const ::std::string& value);
  inline void set_critical_selectors(int index, const char* value);
  inline void set_critical_selectors(int index, const char* value, size_t size);
  inline ::std::string* add_critical_selectors();
  inline void add_critical_selectors(const ::std::string& value);
  inline void add_critical_selectors(const char* value);
  inline void add_critical_selectors(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& critical_selectors() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_critical_selectors();
  
  // @@protoc_insertion_point(class_scope:net_instaweb.CriticalSelectorSet)
 private:
  
  ::google::protobuf::RepeatedPtrField< ::std::string> critical_selectors_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  #endif
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  
  void InitAsDefaultInstance();
  static CriticalSelectorSet* default_instance_;
};
// ===================================================================


// ===================================================================

// CriticalSelectorSet

// repeated string critical_selectors = 1;
inline int CriticalSelectorSet::critical_selectors_size() const {
  return critical_selectors_.size();
}
inline void CriticalSelectorSet::clear_critical_selectors() {
  critical_selectors_.Clear();
}
inline const ::std::string& CriticalSelectorSet::critical_selectors(int index) const {
  return critical_selectors_.Get(index);
}
inline ::std::string* CriticalSelectorSet::mutable_critical_selectors(int index) {
  return critical_selectors_.Mutable(index);
}
inline void CriticalSelectorSet::set_critical_selectors(int index, const ::std::string& value) {
  critical_selectors_.Mutable(index)->assign(value);
}
inline void CriticalSelectorSet::set_critical_selectors(int index, const char* value) {
  critical_selectors_.Mutable(index)->assign(value);
}
inline void CriticalSelectorSet::set_critical_selectors(int index, const char* value, size_t size) {
  critical_selectors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CriticalSelectorSet::add_critical_selectors() {
  return critical_selectors_.Add();
}
inline void CriticalSelectorSet::add_critical_selectors(const ::std::string& value) {
  critical_selectors_.Add()->assign(value);
}
inline void CriticalSelectorSet::add_critical_selectors(const char* value) {
  critical_selectors_.Add()->assign(value);
}
inline void CriticalSelectorSet::add_critical_selectors(const char* value, size_t size) {
  critical_selectors_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CriticalSelectorSet::critical_selectors() const {
  return critical_selectors_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CriticalSelectorSet::mutable_critical_selectors() {
  return &critical_selectors_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto__INCLUDED
