// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/util/client_state.proto

#ifndef PROTOBUF_net_2finstaweb_2futil_2fclient_5fstate_2eproto__INCLUDED
#define PROTOBUF_net_2finstaweb_2futil_2fclient_5fstate_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2finstaweb_2futil_2fclient_5fstate_2eproto();
void protobuf_AssignDesc_net_2finstaweb_2futil_2fclient_5fstate_2eproto();
void protobuf_ShutdownFile_net_2finstaweb_2futil_2fclient_5fstate_2eproto();

class ClientStateMsg;

// ===================================================================

class ClientStateMsg : public ::google::protobuf::MessageLite {
 public:
  ClientStateMsg();
  virtual ~ClientStateMsg();
  
  ClientStateMsg(const ClientStateMsg& from);
  
  inline ClientStateMsg& operator=(const ClientStateMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const ClientStateMsg& default_instance();
  
  void Swap(ClientStateMsg* other);
  
  // implements Message ----------------------------------------------
  
  ClientStateMsg* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ClientStateMsg& from);
  void MergeFrom(const ClientStateMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string client_id = 1;
  inline bool has_client_id() const;
  inline void clear_client_id();
  static const int kClientIdFieldNumber = 1;
  inline const ::std::string& client_id() const;
  inline void set_client_id(const ::std::string& value);
  inline void set_client_id(const char* value);
  inline void set_client_id(const char* value, size_t size);
  inline ::std::string* mutable_client_id();
  inline ::std::string* release_client_id();
  
  // optional int64 create_time_ms = 2;
  inline bool has_create_time_ms() const;
  inline void clear_create_time_ms();
  static const int kCreateTimeMsFieldNumber = 2;
  inline ::google::protobuf::int64 create_time_ms() const;
  inline void set_create_time_ms(::google::protobuf::int64 value);
  
  // repeated string recent_urls = 3;
  inline int recent_urls_size() const;
  inline void clear_recent_urls();
  static const int kRecentUrlsFieldNumber = 3;
  inline const ::std::string& recent_urls(int index) const;
  inline ::std::string* mutable_recent_urls(int index);
  inline void set_recent_urls(int index, const ::std::string& value);
  inline void set_recent_urls(int index, const char* value);
  inline void set_recent_urls(int index, const char* value, size_t size);
  inline ::std::string* add_recent_urls();
  inline void add_recent_urls(const ::std::string& value);
  inline void add_recent_urls(const char* value);
  inline void add_recent_urls(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& recent_urls() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_recent_urls();
  
  // @@protoc_insertion_point(class_scope:net_instaweb.ClientStateMsg)
 private:
  inline void set_has_client_id();
  inline void clear_has_client_id();
  inline void set_has_create_time_ms();
  inline void clear_has_create_time_ms();
  
  ::std::string* client_id_;
  ::google::protobuf::int64 create_time_ms_;
  ::google::protobuf::RepeatedPtrField< ::std::string> recent_urls_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_net_2finstaweb_2futil_2fclient_5fstate_2eproto();
  friend void protobuf_AssignDesc_net_2finstaweb_2futil_2fclient_5fstate_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2futil_2fclient_5fstate_2eproto();
  
  void InitAsDefaultInstance();
  static ClientStateMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// ClientStateMsg

// optional string client_id = 1;
inline bool ClientStateMsg::has_client_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientStateMsg::set_has_client_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientStateMsg::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientStateMsg::clear_client_id() {
  if (client_id_ != &::google::protobuf::internal::kEmptyString) {
    client_id_->clear();
  }
  clear_has_client_id();
}
inline const ::std::string& ClientStateMsg::client_id() const {
  return *client_id_;
}
inline void ClientStateMsg::set_client_id(const ::std::string& value) {
  set_has_client_id();
  if (client_id_ == &::google::protobuf::internal::kEmptyString) {
    client_id_ = new ::std::string;
  }
  client_id_->assign(value);
}
inline void ClientStateMsg::set_client_id(const char* value) {
  set_has_client_id();
  if (client_id_ == &::google::protobuf::internal::kEmptyString) {
    client_id_ = new ::std::string;
  }
  client_id_->assign(value);
}
inline void ClientStateMsg::set_client_id(const char* value, size_t size) {
  set_has_client_id();
  if (client_id_ == &::google::protobuf::internal::kEmptyString) {
    client_id_ = new ::std::string;
  }
  client_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientStateMsg::mutable_client_id() {
  set_has_client_id();
  if (client_id_ == &::google::protobuf::internal::kEmptyString) {
    client_id_ = new ::std::string;
  }
  return client_id_;
}
inline ::std::string* ClientStateMsg::release_client_id() {
  clear_has_client_id();
  if (client_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = client_id_;
    client_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 create_time_ms = 2;
inline bool ClientStateMsg::has_create_time_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientStateMsg::set_has_create_time_ms() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientStateMsg::clear_has_create_time_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientStateMsg::clear_create_time_ms() {
  create_time_ms_ = GOOGLE_LONGLONG(0);
  clear_has_create_time_ms();
}
inline ::google::protobuf::int64 ClientStateMsg::create_time_ms() const {
  return create_time_ms_;
}
inline void ClientStateMsg::set_create_time_ms(::google::protobuf::int64 value) {
  set_has_create_time_ms();
  create_time_ms_ = value;
}

// repeated string recent_urls = 3;
inline int ClientStateMsg::recent_urls_size() const {
  return recent_urls_.size();
}
inline void ClientStateMsg::clear_recent_urls() {
  recent_urls_.Clear();
}
inline const ::std::string& ClientStateMsg::recent_urls(int index) const {
  return recent_urls_.Get(index);
}
inline ::std::string* ClientStateMsg::mutable_recent_urls(int index) {
  return recent_urls_.Mutable(index);
}
inline void ClientStateMsg::set_recent_urls(int index, const ::std::string& value) {
  recent_urls_.Mutable(index)->assign(value);
}
inline void ClientStateMsg::set_recent_urls(int index, const char* value) {
  recent_urls_.Mutable(index)->assign(value);
}
inline void ClientStateMsg::set_recent_urls(int index, const char* value, size_t size) {
  recent_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientStateMsg::add_recent_urls() {
  return recent_urls_.Add();
}
inline void ClientStateMsg::add_recent_urls(const ::std::string& value) {
  recent_urls_.Add()->assign(value);
}
inline void ClientStateMsg::add_recent_urls(const char* value) {
  recent_urls_.Add()->assign(value);
}
inline void ClientStateMsg::add_recent_urls(const char* value, size_t size) {
  recent_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientStateMsg::recent_urls() const {
  return recent_urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientStateMsg::mutable_recent_urls() {
  return &recent_urls_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2finstaweb_2futil_2fclient_5fstate_2eproto__INCLUDED
