// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: net/instaweb/rewriter/critical_selectors.proto

#ifndef PROTOBUF_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto__INCLUDED
#define PROTOBUF_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace net_instaweb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();

class CriticalSelectorSet;
class CriticalSelectorSummarizedCss;
class CriticalSelectorSummarizedCss_ResourceSummary;

// ===================================================================

class CriticalSelectorSet : public ::google::protobuf::MessageLite {
 public:
  CriticalSelectorSet();
  virtual ~CriticalSelectorSet();
  
  CriticalSelectorSet(const CriticalSelectorSet& from);
  
  inline CriticalSelectorSet& operator=(const CriticalSelectorSet& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const CriticalSelectorSet& default_instance();
  
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CriticalSelectorSet* internal_default_instance() {
    return default_instance_;
  }
  #endif
  
  void Swap(CriticalSelectorSet* other);
  
  // implements Message ----------------------------------------------
  
  CriticalSelectorSet* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CriticalSelectorSet& from);
  void MergeFrom(const CriticalSelectorSet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string critical_selectors = 1;
  inline int critical_selectors_size() const;
  inline void clear_critical_selectors();
  static const int kCriticalSelectorsFieldNumber = 1;
  inline const ::std::string& critical_selectors(int index) const;
  inline ::std::string* mutable_critical_selectors(int index);
  inline void set_critical_selectors(int index, const ::std::string& value);
  inline void set_critical_selectors(int index, const char* value);
  inline void set_critical_selectors(int index, const char* value, size_t size);
  inline ::std::string* add_critical_selectors();
  inline void add_critical_selectors(const ::std::string& value);
  inline void add_critical_selectors(const char* value);
  inline void add_critical_selectors(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& critical_selectors() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_critical_selectors();
  
  // @@protoc_insertion_point(class_scope:net_instaweb.CriticalSelectorSet)
 private:
  
  ::google::protobuf::RepeatedPtrField< ::std::string> critical_selectors_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  #endif
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  
  void InitAsDefaultInstance();
  static CriticalSelectorSet* default_instance_;
};
// -------------------------------------------------------------------

class CriticalSelectorSummarizedCss_ResourceSummary : public ::google::protobuf::MessageLite {
 public:
  CriticalSelectorSummarizedCss_ResourceSummary();
  virtual ~CriticalSelectorSummarizedCss_ResourceSummary();
  
  CriticalSelectorSummarizedCss_ResourceSummary(const CriticalSelectorSummarizedCss_ResourceSummary& from);
  
  inline CriticalSelectorSummarizedCss_ResourceSummary& operator=(const CriticalSelectorSummarizedCss_ResourceSummary& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const CriticalSelectorSummarizedCss_ResourceSummary& default_instance();
  
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CriticalSelectorSummarizedCss_ResourceSummary* internal_default_instance() {
    return default_instance_;
  }
  #endif
  
  void Swap(CriticalSelectorSummarizedCss_ResourceSummary* other);
  
  // implements Message ----------------------------------------------
  
  CriticalSelectorSummarizedCss_ResourceSummary* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CriticalSelectorSummarizedCss_ResourceSummary& from);
  void MergeFrom(const CriticalSelectorSummarizedCss_ResourceSummary& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // optional string media = 2;
  inline bool has_media() const;
  inline void clear_media();
  static const int kMediaFieldNumber = 2;
  inline const ::std::string& media() const;
  inline void set_media(const ::std::string& value);
  inline void set_media(const char* value);
  inline void set_media(const char* value, size_t size);
  inline ::std::string* mutable_media();
  inline ::std::string* release_media();
  
  // optional bool all_media_non_screen = 3 [default = false];
  inline bool has_all_media_non_screen() const;
  inline void clear_all_media_non_screen();
  static const int kAllMediaNonScreenFieldNumber = 3;
  inline bool all_media_non_screen() const;
  inline void set_all_media_non_screen(bool value);
  
  // optional bool external = 4 [default = false];
  inline bool has_external() const;
  inline void clear_external();
  static const int kExternalFieldNumber = 4;
  inline bool external() const;
  inline void set_external(bool value);
  
  // optional string base = 5;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 5;
  inline const ::std::string& base() const;
  inline void set_base(const ::std::string& value);
  inline void set_base(const char* value);
  inline void set_base(const char* value, size_t size);
  inline ::std::string* mutable_base();
  inline ::std::string* release_base();
  
  // @@protoc_insertion_point(class_scope:net_instaweb.CriticalSelectorSummarizedCss.ResourceSummary)
 private:
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_media();
  inline void clear_has_media();
  inline void set_has_all_media_non_screen();
  inline void clear_has_all_media_non_screen();
  inline void set_has_external();
  inline void clear_has_external();
  inline void set_has_base();
  inline void clear_has_base();
  
  ::std::string* content_;
  ::std::string* media_;
  ::std::string* base_;
  bool all_media_non_screen_;
  bool external_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  #endif
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  
  void InitAsDefaultInstance();
  static CriticalSelectorSummarizedCss_ResourceSummary* default_instance_;
};
// -------------------------------------------------------------------

class CriticalSelectorSummarizedCss : public ::google::protobuf::MessageLite {
 public:
  CriticalSelectorSummarizedCss();
  virtual ~CriticalSelectorSummarizedCss();
  
  CriticalSelectorSummarizedCss(const CriticalSelectorSummarizedCss& from);
  
  inline CriticalSelectorSummarizedCss& operator=(const CriticalSelectorSummarizedCss& from) {
    CopyFrom(from);
    return *this;
  }
  
  static const CriticalSelectorSummarizedCss& default_instance();
  
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CriticalSelectorSummarizedCss* internal_default_instance() {
    return default_instance_;
  }
  #endif
  
  void Swap(CriticalSelectorSummarizedCss* other);
  
  // implements Message ----------------------------------------------
  
  CriticalSelectorSummarizedCss* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CriticalSelectorSummarizedCss& from);
  void MergeFrom(const CriticalSelectorSummarizedCss& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::std::string GetTypeName() const;
  
  // nested types ----------------------------------------------------
  
  typedef CriticalSelectorSummarizedCss_ResourceSummary ResourceSummary;
  
  // accessors -------------------------------------------------------
  
  // optional string deprecated_content = 1;
  inline bool has_deprecated_content() const;
  inline void clear_deprecated_content();
  static const int kDeprecatedContentFieldNumber = 1;
  inline const ::std::string& deprecated_content() const;
  inline void set_deprecated_content(const ::std::string& value);
  inline void set_deprecated_content(const char* value);
  inline void set_deprecated_content(const char* value, size_t size);
  inline ::std::string* mutable_deprecated_content();
  inline ::std::string* release_deprecated_content();
  
  // repeated .net_instaweb.CriticalSelectorSummarizedCss.ResourceSummary summary = 2;
  inline int summary_size() const;
  inline void clear_summary();
  static const int kSummaryFieldNumber = 2;
  inline const ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary& summary(int index) const;
  inline ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary* mutable_summary(int index);
  inline ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary* add_summary();
  inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary >&
      summary() const;
  inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary >*
      mutable_summary();
  
  // @@protoc_insertion_point(class_scope:net_instaweb.CriticalSelectorSummarizedCss)
 private:
  inline void set_has_deprecated_content();
  inline void clear_has_deprecated_content();
  
  ::std::string* deprecated_content_;
  ::google::protobuf::RepeatedPtrField< ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary > summary_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  #endif
  friend void protobuf_AssignDesc_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  friend void protobuf_ShutdownFile_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto();
  
  void InitAsDefaultInstance();
  static CriticalSelectorSummarizedCss* default_instance_;
};
// ===================================================================


// ===================================================================

// CriticalSelectorSet

// repeated string critical_selectors = 1;
inline int CriticalSelectorSet::critical_selectors_size() const {
  return critical_selectors_.size();
}
inline void CriticalSelectorSet::clear_critical_selectors() {
  critical_selectors_.Clear();
}
inline const ::std::string& CriticalSelectorSet::critical_selectors(int index) const {
  return critical_selectors_.Get(index);
}
inline ::std::string* CriticalSelectorSet::mutable_critical_selectors(int index) {
  return critical_selectors_.Mutable(index);
}
inline void CriticalSelectorSet::set_critical_selectors(int index, const ::std::string& value) {
  critical_selectors_.Mutable(index)->assign(value);
}
inline void CriticalSelectorSet::set_critical_selectors(int index, const char* value) {
  critical_selectors_.Mutable(index)->assign(value);
}
inline void CriticalSelectorSet::set_critical_selectors(int index, const char* value, size_t size) {
  critical_selectors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CriticalSelectorSet::add_critical_selectors() {
  return critical_selectors_.Add();
}
inline void CriticalSelectorSet::add_critical_selectors(const ::std::string& value) {
  critical_selectors_.Add()->assign(value);
}
inline void CriticalSelectorSet::add_critical_selectors(const char* value) {
  critical_selectors_.Add()->assign(value);
}
inline void CriticalSelectorSet::add_critical_selectors(const char* value, size_t size) {
  critical_selectors_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CriticalSelectorSet::critical_selectors() const {
  return critical_selectors_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CriticalSelectorSet::mutable_critical_selectors() {
  return &critical_selectors_;
}

// -------------------------------------------------------------------

// CriticalSelectorSummarizedCss_ResourceSummary

// optional string content = 1;
inline bool CriticalSelectorSummarizedCss_ResourceSummary::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& CriticalSelectorSummarizedCss_ResourceSummary::content() const {
  return *content_;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CriticalSelectorSummarizedCss_ResourceSummary::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* CriticalSelectorSummarizedCss_ResourceSummary::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string media = 2;
inline bool CriticalSelectorSummarizedCss_ResourceSummary::has_media() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_has_media() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_has_media() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_media() {
  if (media_ != &::google::protobuf::internal::kEmptyString) {
    media_->clear();
  }
  clear_has_media();
}
inline const ::std::string& CriticalSelectorSummarizedCss_ResourceSummary::media() const {
  return *media_;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_media(const ::std::string& value) {
  set_has_media();
  if (media_ == &::google::protobuf::internal::kEmptyString) {
    media_ = new ::std::string;
  }
  media_->assign(value);
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_media(const char* value) {
  set_has_media();
  if (media_ == &::google::protobuf::internal::kEmptyString) {
    media_ = new ::std::string;
  }
  media_->assign(value);
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_media(const char* value, size_t size) {
  set_has_media();
  if (media_ == &::google::protobuf::internal::kEmptyString) {
    media_ = new ::std::string;
  }
  media_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CriticalSelectorSummarizedCss_ResourceSummary::mutable_media() {
  set_has_media();
  if (media_ == &::google::protobuf::internal::kEmptyString) {
    media_ = new ::std::string;
  }
  return media_;
}
inline ::std::string* CriticalSelectorSummarizedCss_ResourceSummary::release_media() {
  clear_has_media();
  if (media_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = media_;
    media_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool all_media_non_screen = 3 [default = false];
inline bool CriticalSelectorSummarizedCss_ResourceSummary::has_all_media_non_screen() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_has_all_media_non_screen() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_has_all_media_non_screen() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_all_media_non_screen() {
  all_media_non_screen_ = false;
  clear_has_all_media_non_screen();
}
inline bool CriticalSelectorSummarizedCss_ResourceSummary::all_media_non_screen() const {
  return all_media_non_screen_;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_all_media_non_screen(bool value) {
  set_has_all_media_non_screen();
  all_media_non_screen_ = value;
}

// optional bool external = 4 [default = false];
inline bool CriticalSelectorSummarizedCss_ResourceSummary::has_external() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_has_external() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_has_external() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_external() {
  external_ = false;
  clear_has_external();
}
inline bool CriticalSelectorSummarizedCss_ResourceSummary::external() const {
  return external_;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_external(bool value) {
  set_has_external();
  external_ = value;
}

// optional string base = 5;
inline bool CriticalSelectorSummarizedCss_ResourceSummary::has_base() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_has_base() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_has_base() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::clear_base() {
  if (base_ != &::google::protobuf::internal::kEmptyString) {
    base_->clear();
  }
  clear_has_base();
}
inline const ::std::string& CriticalSelectorSummarizedCss_ResourceSummary::base() const {
  return *base_;
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_base(const ::std::string& value) {
  set_has_base();
  if (base_ == &::google::protobuf::internal::kEmptyString) {
    base_ = new ::std::string;
  }
  base_->assign(value);
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_base(const char* value) {
  set_has_base();
  if (base_ == &::google::protobuf::internal::kEmptyString) {
    base_ = new ::std::string;
  }
  base_->assign(value);
}
inline void CriticalSelectorSummarizedCss_ResourceSummary::set_base(const char* value, size_t size) {
  set_has_base();
  if (base_ == &::google::protobuf::internal::kEmptyString) {
    base_ = new ::std::string;
  }
  base_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CriticalSelectorSummarizedCss_ResourceSummary::mutable_base() {
  set_has_base();
  if (base_ == &::google::protobuf::internal::kEmptyString) {
    base_ = new ::std::string;
  }
  return base_;
}
inline ::std::string* CriticalSelectorSummarizedCss_ResourceSummary::release_base() {
  clear_has_base();
  if (base_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = base_;
    base_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// CriticalSelectorSummarizedCss

// optional string deprecated_content = 1;
inline bool CriticalSelectorSummarizedCss::has_deprecated_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CriticalSelectorSummarizedCss::set_has_deprecated_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CriticalSelectorSummarizedCss::clear_has_deprecated_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CriticalSelectorSummarizedCss::clear_deprecated_content() {
  if (deprecated_content_ != &::google::protobuf::internal::kEmptyString) {
    deprecated_content_->clear();
  }
  clear_has_deprecated_content();
}
inline const ::std::string& CriticalSelectorSummarizedCss::deprecated_content() const {
  return *deprecated_content_;
}
inline void CriticalSelectorSummarizedCss::set_deprecated_content(const ::std::string& value) {
  set_has_deprecated_content();
  if (deprecated_content_ == &::google::protobuf::internal::kEmptyString) {
    deprecated_content_ = new ::std::string;
  }
  deprecated_content_->assign(value);
}
inline void CriticalSelectorSummarizedCss::set_deprecated_content(const char* value) {
  set_has_deprecated_content();
  if (deprecated_content_ == &::google::protobuf::internal::kEmptyString) {
    deprecated_content_ = new ::std::string;
  }
  deprecated_content_->assign(value);
}
inline void CriticalSelectorSummarizedCss::set_deprecated_content(const char* value, size_t size) {
  set_has_deprecated_content();
  if (deprecated_content_ == &::google::protobuf::internal::kEmptyString) {
    deprecated_content_ = new ::std::string;
  }
  deprecated_content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CriticalSelectorSummarizedCss::mutable_deprecated_content() {
  set_has_deprecated_content();
  if (deprecated_content_ == &::google::protobuf::internal::kEmptyString) {
    deprecated_content_ = new ::std::string;
  }
  return deprecated_content_;
}
inline ::std::string* CriticalSelectorSummarizedCss::release_deprecated_content() {
  clear_has_deprecated_content();
  if (deprecated_content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deprecated_content_;
    deprecated_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .net_instaweb.CriticalSelectorSummarizedCss.ResourceSummary summary = 2;
inline int CriticalSelectorSummarizedCss::summary_size() const {
  return summary_.size();
}
inline void CriticalSelectorSummarizedCss::clear_summary() {
  summary_.Clear();
}
inline const ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary& CriticalSelectorSummarizedCss::summary(int index) const {
  return summary_.Get(index);
}
inline ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary* CriticalSelectorSummarizedCss::mutable_summary(int index) {
  return summary_.Mutable(index);
}
inline ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary* CriticalSelectorSummarizedCss::add_summary() {
  return summary_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary >&
CriticalSelectorSummarizedCss::summary() const {
  return summary_;
}
inline ::google::protobuf::RepeatedPtrField< ::net_instaweb::CriticalSelectorSummarizedCss_ResourceSummary >*
CriticalSelectorSummarizedCss::mutable_summary() {
  return &summary_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace net_instaweb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_net_2finstaweb_2frewriter_2fcritical_5fselectors_2eproto__INCLUDED
